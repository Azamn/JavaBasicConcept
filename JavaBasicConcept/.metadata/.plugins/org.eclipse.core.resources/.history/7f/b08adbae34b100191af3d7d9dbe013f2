package JavaLambda;

@FunctionalInterface  // anotation
interface cab{ // when an interface will have exactly 1 abstract method we can say it as a Functional Interface
	void bookCab(); //by default public abstract void bookCab();
		
}

//class uberX implements cab{
//	public void bookCab() {
//		System.out.println("UberX Booked  !! Ariving Soon..!");
//	}
//}

public class lambdaApp {
	public static void main(String args[]) {
		
//		cab cab = new uberX();
//		cab.bookCab();
		
		
		// Anonymous Class implementation
		cab cab = new cab() { 
			
			@Override
			public void bookCab() {
				// TODO Auto-generated method stub
				System.out.println("UberX Booked  !! Ariving Soon..!");
			}
			
			cab.bookCab();
		};
	}

}
